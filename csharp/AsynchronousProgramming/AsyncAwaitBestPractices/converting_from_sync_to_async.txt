Sync Method Returns     Async Equivalent Returns
===================     =====================
                        void (don't do this)
void                    Task
T                       Task<T>


Void-returning async methods have a specific purpose: to make asynchronous event handlers possible.

Async void methods have different error-handling semantics. When an exception is thrown out of an
async Task or async Task<T> method, that exception is captured and placed on the Task object.
With async void methods, there is no Task object, so any exceptions thrown out of an async void
method will be raised directly on the SynchronizationContext that was active when the async void
method started. Figure 2 illustrates that exceptions thrown from async void methods can’t be caught
naturally.
